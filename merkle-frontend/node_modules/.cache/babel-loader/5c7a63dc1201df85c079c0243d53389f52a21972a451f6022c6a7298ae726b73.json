{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/certi/merkle-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _verifyResult$corrupt, _verifyResult$totalCh;\n  const [uploadFile, setUploadFile] = useState(null);\n  const [uploadResult, setUploadResult] = useState(null);\n  const [verifyFile, setVerifyFile] = useState(null);\n  const [merkleFile, setMerkleFile] = useState(null);\n  const [verifyResult, setVerifyResult] = useState(null);\n  const handleUpload = async () => {\n    if (!uploadFile) return alert(\"Select a file to upload\");\n    const formData = new FormData();\n    formData.append('file', uploadFile);\n    const res = await fetch('http://localhost:4000/upload', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await res.json();\n    setUploadResult(data);\n    if (data.status === 'success') {\n      // Auto-download the Merkle JSON file\n      const merkleFileUrl = `http://localhost:4000/${data.merkleTreeFile}`;\n      const merkleResponse = await fetch(merkleFileUrl);\n      const merkleBlob = await merkleResponse.blob();\n      const downloadLink = document.createElement('a');\n      downloadLink.href = URL.createObjectURL(merkleBlob);\n      downloadLink.download = data.merkleTreeFile;\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      downloadLink.remove();\n    }\n  };\n  const handleVerify = async () => {\n    if (!verifyFile || !merkleFile) return alert(\"Select both file and Merkle JSON\");\n    const formData = new FormData();\n    formData.append('file', verifyFile);\n    formData.append('merkleTree', merkleFile);\n    const res = await fetch('http://localhost:4000/verify', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await res.json();\n    setVerifyResult(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload File & Generate Merkle Tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setUploadFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload & Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), uploadResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Root Hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 14\n        }, this), \" \", uploadResult.rootHash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `http://localhost:4000/${uploadResult.merkleTreeFile}`,\n        download: true,\n        children: \"Download Merkle Tree JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify File Using Merkle Tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setVerifyFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 78\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setMerkleFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 78\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerify,\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), verifyResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Root Hash Matches:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 8\n        }, this), \" \", verifyResult.rootMatches ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Corrupted Chunks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 8\n        }, this), \" \", (_verifyResult$corrupt = verifyResult.corruptedChunks) !== null && _verifyResult$corrupt !== void 0 ? _verifyResult$corrupt : '-', \" / \", (_verifyResult$totalCh = verifyResult.totalChunks) !== null && _verifyResult$totalCh !== void 0 ? _verifyResult$totalCh : '-']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Corruption Percentage:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 8\n        }, this), \" \", verifyResult.corruptionPercentage !== undefined ? verifyResult.corruptionPercentage.toFixed(2) : '-', \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Lp2LxuZ2vZhRVX3GinMEHF/3Gkw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","_verifyResult$corrupt","_verifyResult$totalCh","uploadFile","setUploadFile","uploadResult","setUploadResult","verifyFile","setVerifyFile","merkleFile","setMerkleFile","verifyResult","setVerifyResult","handleUpload","alert","formData","FormData","append","res","fetch","method","body","data","json","status","merkleFileUrl","merkleTreeFile","merkleResponse","merkleBlob","blob","downloadLink","document","createElement","href","URL","createObjectURL","download","appendChild","click","remove","handleVerify","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","rootHash","rootMatches","corruptedChunks","totalChunks","corruptionPercentage","undefined","toFixed","_c","$RefreshReg$"],"sources":["/home/shubham/Desktop/certi/merkle-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [uploadFile, setUploadFile] = useState(null);\n  const [uploadResult, setUploadResult] = useState(null);\n\n  const [verifyFile, setVerifyFile] = useState(null);\n  const [merkleFile, setMerkleFile] = useState(null);\n  const [verifyResult, setVerifyResult] = useState(null);\n\n  const handleUpload = async () => {\n    if (!uploadFile) return alert(\"Select a file to upload\");\n    const formData = new FormData();\n    formData.append('file', uploadFile);\n  \n    const res = await fetch('http://localhost:4000/upload', {\n      method: 'POST',\n      body: formData,\n    });\n    const data = await res.json();\n    setUploadResult(data);\n  \n    if (data.status === 'success') {\n      // Auto-download the Merkle JSON file\n      const merkleFileUrl = `http://localhost:4000/${data.merkleTreeFile}`;\n      const merkleResponse = await fetch(merkleFileUrl);\n      const merkleBlob = await merkleResponse.blob();\n  \n      const downloadLink = document.createElement('a');\n      downloadLink.href = URL.createObjectURL(merkleBlob);\n      downloadLink.download = data.merkleTreeFile;\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      downloadLink.remove();\n    }\n  };\n  \n\n  const handleVerify = async () => {\n    if (!verifyFile || !merkleFile) return alert(\"Select both file and Merkle JSON\");\n    const formData = new FormData();\n    formData.append('file', verifyFile);\n    formData.append('merkleTree', merkleFile);\n\n    const res = await fetch('http://localhost:4000/verify', {\n      method: 'POST',\n      body: formData,\n    });\n    const data = await res.json();\n    setVerifyResult(data);\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Upload File & Generate Merkle Tree</h2>\n      <input type=\"file\" onChange={e => setUploadFile(e.target.files[0])} />\n      <button onClick={handleUpload}>Upload & Generate</button>\n\n      {uploadResult && (\n        <div>\n          <p><b>Root Hash:</b> {uploadResult.rootHash}</p>\n          <a href={`http://localhost:4000/${uploadResult.merkleTreeFile}`} download>Download Merkle Tree JSON</a>\n        </div>\n      )}\n\n      <hr />\n\n      <h2>Verify File Using Merkle Tree</h2>\n      <input type=\"file\" onChange={e => setVerifyFile(e.target.files[0])} /> <br />\n      <input type=\"file\" onChange={e => setMerkleFile(e.target.files[0])} /> <br />\n      <button onClick={handleVerify}>Verify</button>\n\n      {verifyResult && (\n  <div>\n    <p><b>Root Hash Matches:</b> {verifyResult.rootMatches ? 'Yes' : 'No'}</p>\n    <p><b>Corrupted Chunks:</b> {verifyResult.corruptedChunks ?? '-'} / {verifyResult.totalChunks ?? '-'}</p>\n    <p><b>Corruption Percentage:</b> {verifyResult.corruptionPercentage !== undefined \n      ? verifyResult.corruptionPercentage.toFixed(2) \n      : '-' }%</p>\n  </div>\n)}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,qBAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACV,UAAU,EAAE,OAAOW,KAAK,CAAC,yBAAyB,CAAC;IACxD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEd,UAAU,CAAC;IAEnC,MAAMe,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACtDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IACF,MAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAC7BjB,eAAe,CAACgB,IAAI,CAAC;IAErB,IAAIA,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;MAC7B;MACA,MAAMC,aAAa,GAAG,yBAAyBH,IAAI,CAACI,cAAc,EAAE;MACpE,MAAMC,cAAc,GAAG,MAAMR,KAAK,CAACM,aAAa,CAAC;MACjD,MAAMG,UAAU,GAAG,MAAMD,cAAc,CAACE,IAAI,CAAC,CAAC;MAE9C,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MAChDF,YAAY,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACP,UAAU,CAAC;MACnDE,YAAY,CAACM,QAAQ,GAAGd,IAAI,CAACI,cAAc;MAC3CK,QAAQ,CAACV,IAAI,CAACgB,WAAW,CAACP,YAAY,CAAC;MACvCA,YAAY,CAACQ,KAAK,CAAC,CAAC;MACpBR,YAAY,CAACS,MAAM,CAAC,CAAC;IACvB;EACF,CAAC;EAGD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACjC,UAAU,IAAI,CAACE,UAAU,EAAE,OAAOK,KAAK,CAAC,kCAAkC,CAAC;IAChF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEV,UAAU,CAAC;IACnCQ,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAER,UAAU,CAAC;IAEzC,MAAMS,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACtDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IACF,MAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAC7BX,eAAe,CAACU,IAAI,CAAC;EACvB,CAAC;EAED,oBACExB,OAAA;IAAK2C,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC1B7C,OAAA;MAAA6C,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CjD,OAAA;MAAOkD,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEC,CAAC,IAAI9C,aAAa,CAAC8C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtEjD,OAAA;MAAQuD,OAAO,EAAExC,YAAa;MAAA8B,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAExD1C,YAAY,iBACXP,OAAA;MAAA6C,QAAA,gBACE7C,OAAA;QAAA6C,QAAA,gBAAG7C,OAAA;UAAA6C,QAAA,EAAG;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,EAAC1C,YAAY,CAACiD,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDjD,OAAA;QAAGmC,IAAI,EAAE,yBAAyB5B,YAAY,CAACqB,cAAc,EAAG;QAACU,QAAQ;QAAAO,QAAA,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpG,CACN,eAEDjD,OAAA;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENjD,OAAA;MAAA6C,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCjD,OAAA;MAAOkD,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEC,CAAC,IAAI1C,aAAa,CAAC0C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eAAAjD,OAAA;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7EjD,OAAA;MAAOkD,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEC,CAAC,IAAIxC,aAAa,CAACwC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eAAAjD,OAAA;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7EjD,OAAA;MAAQuD,OAAO,EAAEb,YAAa;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE7CpC,YAAY,iBACjBb,OAAA;MAAA6C,QAAA,gBACE7C,OAAA;QAAA6C,QAAA,gBAAG7C,OAAA;UAAA6C,QAAA,EAAG;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,EAACpC,YAAY,CAAC4C,WAAW,GAAG,KAAK,GAAG,IAAI;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1EjD,OAAA;QAAA6C,QAAA,gBAAG7C,OAAA;UAAA6C,QAAA,EAAG;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,GAAA9C,qBAAA,GAACU,YAAY,CAAC6C,eAAe,cAAAvD,qBAAA,cAAAA,qBAAA,GAAI,GAAG,EAAC,KAAG,GAAAC,qBAAA,GAACS,YAAY,CAAC8C,WAAW,cAAAvD,qBAAA,cAAAA,qBAAA,GAAI,GAAG;MAAA;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzGjD,OAAA;QAAA6C,QAAA,gBAAG7C,OAAA;UAAA6C,QAAA,EAAG;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,EAACpC,YAAY,CAAC+C,oBAAoB,KAAKC,SAAS,GAC7EhD,YAAY,CAAC+C,oBAAoB,CAACE,OAAO,CAAC,CAAC,CAAC,GAC5C,GAAG,EAAE,GAAC;MAAA;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEQ,CAAC;AAEV;AAAC/C,EAAA,CAlFQD,GAAG;AAAA8D,EAAA,GAAH9D,GAAG;AAoFZ,eAAeA,GAAG;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}